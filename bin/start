#!/usr/bin/env ruby
$PROGRAM_NAME='weeknoteabot'
$stdout.sync = true

require 'thread'

require 'bundler/setup'
require 'mail'

$:.unshift('./lib')
require 'mailer'
require 'message_parser'
require 'weeknote_state'

config_file = File.expand_path('../config.yml', File.dirname(__FILE__))

begin
  email_config = YAML::load_file(config_file)
rescue Errno::ENOENT => e
  abort "config.yml not found. Use rake config to generate one."
end

Mail.defaults do
  retriever_method :imap, email_config
end

@state         = WeeknoteState.new
@incoming_mail = Queue.new
@outgoing_mail = Queue.new
@threads       = []

Thread.abort_on_exception = true
@threads << Thread.new do
  loop do
    Mailer.check_for_new_email do |email|
      @incoming_mail << email
    end
    sleep(10)
  end
end

@threads << Thread.new do
  loop do
    email = @incoming_mail.pop
    msg = MessageParser.new(email, @state)
    msg.parse
    @outgoing_mail << msg.response if msg.reply?
  end
end

@threads << Thread.new do
  loop do
    email = @outgoing_mail.pop
    email[:from] ||= email_config[:user_name]

    sent = Mailer.send(email)
    p 'omg not sent' unless sent
  end
end

@threads.each(&:join)
