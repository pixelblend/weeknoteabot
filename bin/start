#!/usr/bin/env ruby
$PROGRAM_NAME='weeknoteabot'
$stdout.sync = true

require 'bundler/setup'
require 'eventmachine'
require 'mail'

require './lib/weeknote_state'

config = File.expand_path('../config.yml', File.dirname(__FILE__))

begin
  email_config = YAML::load_file(config)
rescue Errno::ENOENT => e
  abort "config.yml not found. Use rake config to generate one."
end

@state = WeeknoteState.new
@emails = EM::Channel.new

Mail.defaults do
  retriever_method :imap, email_config
end

Thread.abort_on_exception = true
Thread.new do
  loop do
    # find unread emails, oldest first
    Mail.find(:what => :first, :order => :asc, :keys => ['NOT','SEEN']) do |email, imap, uid|
      @emails << email
      # mark as read
      imap.uid_store( uid, "+FLAGS", [Net::IMAP::SEEN] )
    end
    sleep(10)
  end
end

EM.run do
  @emails.subscribe do |email|
#    MessageParser.new(email, @state).parse
    p ['read',email.subject, Time.now]
    sleep(5)
  end
end
